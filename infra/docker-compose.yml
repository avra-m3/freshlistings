version: "3.8"

services:
  ollama:
    image: ollama/ollama:rocm
    container_name: ollama
    volumes:
      - ollama:/root/.ollama
    #    devices:
    #      - /dev/kfd
    #      - /dev/dri
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    dns: ${HOST_DNS}
    restart: unless-stopped
    networks:
      - web
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.oll.rule=Host(`oll.${INTERNAL_DOMAIN}`)"
      - "traefik.http.routers.oll.tls=true"
      - "traefik.http.services.oll.loadbalancer.server.port=11434"
  opensearch-node1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-ml1 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-ml1 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    dns: ${HOST_DNS}
    networks:
      - internal
  opensearch-node2:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    restart: unless-stopped
    dns: ${HOST_DNS}
    networks:
      - internal
  opensearch-ml1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-ml1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-ml1
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - node.roles=ml
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped
    volumes:
      - opensearch-ml1:/usr/share/opensearch/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    dns: ${HOST_DNS}
    networks:
      - internal
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-ml1:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.opendash.rule=Host(`opendash.${INTERNAL_DOMAIN}`)"
      - "traefik.http.routers.opendash.tls=true"
      - "traefik.http.services.opendash.loadbalancer.server.port=5601"
    restart: unless-stopped
    dns: ${HOST_DNS}
    networks:
      - internal
      - web
  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - internal
  web:
    build:
      context: ..
      dockerfile: Dockerfile
    restart: unless-stopped
    dns: ${HOST_DNS}
    depends_on:
      - opensearch
      - redis
    environment:
      OPENSEARCH_URL: "http://opensearch:9200"
      OLLAMA_URL: "http://ollama:11434"
      REDIS_URL: "redis://redis:6379"
    env_file:
      - ../.env
    networks:
      - web
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.freshlistings.rule=Host(`freshlistings.avra.me`)"
      - "traefik.http.routers.freshlistings.tls=true"
      - "traefik.http.services.freshlistings.loadbalancer.server.port=8000"
networks:
  web:
    external: true
  internal:
    driver: bridge
volumes:
  ollama:
  opensearch-data1:
  opensearch-data2:
  opensearch-ml1:
